name: Build rtron

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: ['ubuntu', 'macos', 'windows']
        java: [ '17' ]
        distribution: [ 'temurin' ]
        include:
          - os: 'ubuntu'
            java: '17'
            distribution: 'zulu'
          - os: 'ubuntu'
            java: '17'
            distribution: 'microsoft'
          - os: 'ubuntu'
            java: '17'
            distribution: 'corretto'
          - os: 'windows'
            java: '17'
            distribution: 'oracle'
          - os: 'ubuntu'
            java: '20'
            distribution: 'temurin'
      fail-fast: false

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Set up Java"
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
      - name: "Build with Gradle"
        run: ./gradlew build --no-daemon
      - name: "Test local publishing"
        run: ./gradlew build publishToMavenLocal -Pskip.signing
        if: matrix.os == 'ubuntu'
      - name: "Build documentation"
        run: ./gradlew dokkaHtmlMultiModule --no-daemon
        if: matrix.os == 'ubuntu'
      - name: "Build uber JAR with Gradle"
        run: ./gradlew shadowJar
      - name: "Sanity testing: Validation test runs"
        run: java -jar ./rtron-cli/build/libs/rtron.jar validate-opendrive ./samples/datasets ./samples/datasets-output

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Set up Java"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: "Build with Gradle"
        run: ./gradlew shadowJar
      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: rtron-build
          path: |
            rtron-cli/build/libs/rtron.jar
